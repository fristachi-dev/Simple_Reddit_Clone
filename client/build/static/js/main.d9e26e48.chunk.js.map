{"version":3,"sources":["Components/Database/SignOut.js","Components/Nav/Nav.js","Components/Database/UpdateUser.js","Components/Database/Post.js","Components/Database/AddPost.js","Components/Database/PostFeed.js","Components/Database/SignUp.js","Components/Database/SignIn.js","Components/Database/Comment.js","Components/Database/AddComment.js","Components/Database/Thread.js","Components/Router/Routes.js","App.js","reportWebVitals.js","index.js"],"names":["SignOut","check","style","lineHeight","onClick","localStorage","setItem","Navigation","changeSub","drop","theme","darkmode","useState","getItem","sub","setSub","Navbar","fixed","expand","className","Container","Brand","as","Link","to","fontWeight","fontSize","NavDropdown","title","id","Item","Divider","Nav","size","maxWidth","onChange","checked","onlabel","offlabel","width","height","Toggle","aria-controls","Collapse","eventKey","UpdateUser","setUsers","loaded","setLoaded","username","setUsername","fname","setFname","lname","setLname","email","setEmail","populate","userslist","i","map","x","indexOf","firstName","lastName","console","log","getData","a","axios","get","then","res","data","useEffect","sendUpdate","e","preventDefault","user","post","headers","fluid","minHeight","Row","Col","Form","onSubmit","Label","InputGroup","Prepend","Text","backgroundColor","color","Control","type","name","value","target","Button","block","Spinner","animation","Post","postid","date","likes","comments","getdata","postTitle","postSubject","visible","likePost","current","downVote","xs","lg","md","userSelect","pathname","state","xl","replace","newdate","Date","year","getFullYear","month","getMonth","dt","getDate","substring","length","AddPost","setPost","setPostTitle","setPostSubject","open","setOpen","newPost","onFocus","onBlur","Group","placeholder","maxLength","in","rows","PostFeed","postArr","arr","temp","j","posts","push","sort","b","newsub","_id","votes","SignUp","setUser","pass","setPass","errorMsg","setErrorMsg","addUser","password","msg","token","window","location","reload","SignIn","Comment","comment","AddComment","setComment","newComment","commentuser","sm","Thread","thread","setThread","useLocation","findThread","item","Routes","users","setUserse","checklogin","SetCheckLogIn","setDarkMode","loggedIn","some","path","render","exact","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.d9e26e48.chunk.js","sourcesContent":["import \"../../scss/custom.scss\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst SignOut = ({ check }) => {\n  const deleteToken = () => {\n    localStorage.setItem(\"token\", \"\");\n    localStorage.setItem(\"user\", false);\n    check();\n  };\n\n  return (\n    <div style={{ lineHeight: \"40px\" }} onClick={deleteToken}>\n      Sign Out\n    </div>\n  );\n};\n\nexport default SignOut;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"../../scss/custom.scss\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport SignOut from \"../Database/SignOut\";\nimport { Container, Navbar, Nav, NavDropdown } from \"react-bootstrap\";\nimport { CgFeed } from \"react-icons/cg\";\nimport BootstrapSwitchButton from \"bootstrap-switch-button-react\";\n\nconst Navigation = ({ check, changeSub, drop, theme, darkmode }) => {\n  const [sub, setSub] = useState(localStorage.getItem(\"sub\"));\n\n  return (\n    <Navbar\n      fixed=\"top\"\n      expand=\"sm\"\n      className={darkmode ? \"theme-dark-grey\" : \"bg-white\"}\n    >\n      <Container className=\"p-0 align-items-start\">\n        <Navbar.Brand\n          className=\"d-none d-sm-block p-0\"\n          as={Link}\n          to=\"/\"\n          style={{ fontWeight: \"400\", fontSize: \"26px\" }}\n        >\n          Threadit\n        </Navbar.Brand>\n\n        {drop ? (\n          <NavDropdown title={sub} id=\"nav-dropdown\" className=\"nav-highlight\">\n            <NavDropdown.Item\n              onClick={() => {\n                changeSub(\"Home\");\n                setSub(\"Home\");\n              }}\n            >\n              Home\n            </NavDropdown.Item>\n            <NavDropdown.Item\n              onClick={() => {\n                changeSub(\"General\");\n                setSub(\"General\");\n              }}\n            >\n              General\n            </NavDropdown.Item>\n            <NavDropdown.Divider />\n            <NavDropdown.Item\n              onClick={() => {\n                changeSub(\"Technology\");\n                setSub(\"Technology\");\n              }}\n            >\n              Technology\n            </NavDropdown.Item>\n            <NavDropdown.Item\n              onClick={() => {\n                changeSub(\"World News\");\n                setSub(\"World News\");\n              }}\n            >\n              World News\n            </NavDropdown.Item>\n            <NavDropdown.Item\n              onClick={() => {\n                changeSub(\"Video Games\");\n                setSub(\"Video Games\");\n              }}\n            >\n              Video Games\n            </NavDropdown.Item>\n            <NavDropdown.Item\n              onClick={() => {\n                changeSub(\"Sports\");\n                setSub(\"Sports\");\n              }}\n            >\n              Sports\n            </NavDropdown.Item>\n          </NavDropdown>\n        ) : (\n          \"\"\n        )}\n\n        <Nav className=\"flex-row\">\n          <Nav.Item>\n            <Nav.Link className=\"p-0 mr-3\" as={Link} to=\"/\">\n              <CgFeed size={38} />\n            </Nav.Link>\n          </Nav.Item>\n\n          <Nav style={{ maxWidth: \"200px\" }}>\n            <Nav.Item className=\"mr-2 d-none d-sm-block\">\n              <BootstrapSwitchButton\n                onChange={theme}\n                checked={darkmode}\n                onlabel=\"Dark\"\n                offlabel=\"Light\"\n                width={80}\n                height={30}\n              />\n            </Nav.Item>\n\n            <Navbar.Toggle\n              aria-controls=\"basic-navbar-nav\"\n              className={darkmode ? \"theme-dark-grey\" : \"bg-white\"}\n            />\n            <Navbar.Collapse\n              className={darkmode ? \"theme-dark-grey\" : \"bg-white\"}\n              id=\"basic-navbar-nav\"\n              style={{ maxWidth: \"200px\" }}\n            >\n              <Nav.Item\n                className=\"d-block d-sm-none\"\n                as={Link}\n                to=\"/UpdateUser\"\n                style={{ lineHeight: \"40px\" }}\n              >\n                Settings\n              </Nav.Item>\n\n              <Nav.Item className=\"d-block d-sm-none\">\n                <SignOut check={check} />\n              </Nav.Item>\n              <Nav.Item className=\"mr-2 d-block d-sm-none\">\n                <BootstrapSwitchButton\n                  onChange={theme}\n                  checked={darkmode}\n                  onlabel=\"Dark\"\n                  offlabel=\"Light\"\n                  width={80}\n                  height={30}\n                />\n              </Nav.Item>\n            </Navbar.Collapse>\n\n            <NavDropdown\n              className=\"nav-highlight d-none d-sm-block\"\n              title={localStorage.getItem(\"user\")}\n              id=\"nav-dropdown\"\n            >\n              <NavDropdown.Item\n                as={Link}\n                to=\"/UpdateUser\"\n                style={{ lineHeight: \"40px\" }}\n              >\n                Settings\n              </NavDropdown.Item>\n              <NavDropdown.Item eventKey=\"2.1\">\n                <SignOut check={check} />\n              </NavDropdown.Item>\n            </NavDropdown>\n          </Nav>\n        </Nav>\n      </Container>\n    </Navbar>\n  );\n};\n\nexport default Navigation;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"../../scss/custom.scss\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Navigation from \"../Nav/Nav\";\nimport {\n  Container,\n  Row,\n  Col,\n  Button,\n  Form,\n  InputGroup,\n  Spinner,\n} from \"react-bootstrap\";\nimport { CgArrowsExchangeAlt } from \"react-icons/cg\";\n\nconst UpdateUser = ({ check, theme, darkmode }) => {\n  const [users, setUsers] = useState(\"\");\n  const [loaded, setLoaded] = useState(false);\n  const [username, setUsername] = useState(\"\");\n  const [fname, setFname] = useState(\"\");\n  const [lname, setLname] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n\n  const updateUsername = (e) => {\n    setUsername(e.target.value);\n  };\n  const updateFname = (e) => {\n    setFname(e.target.value);\n  };\n  const updateLname = (e) => {\n    setLname(e.target.value);\n  };\n  const updateEmail = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const populate = (userslist) => {\n    if (localStorage.getItem(\"user\")) {\n      const i = userslist\n        .map((x) => x.username)\n        .indexOf(localStorage.getItem(\"user\"));\n      setUsername(userslist[i].username);\n      setFname(userslist[i].firstName);\n      setLname(userslist[i].lastName);\n      setEmail(userslist[i].email);\n    } else {\n      console.log(localStorage.getItem(\"user\"));\n    }\n  };\n\n  const getData = async () => {\n    try {\n      const res = await axios\n        .get(\"http://localhost:5000/users/\")\n        .then((res) => {\n          setUsers(res.data);\n          populate(res.data);\n        });\n\n      setLoaded(true);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const sendUpdate = async (e) => {\n    e.preventDefault();\n    const user = {\n      user: username,\n      fname: fname,\n      lname: lname,\n      email: email,\n    };\n    console.log(user);\n\n    await axios\n      .post(\"http://localhost:5000/users/update\", user, {\n        headers: {\n          \"x-auth-token\": localStorage.getItem(\"token\"),\n        },\n      })\n      .then((res) => {\n        getData();\n      });\n  };\n\n  return (\n    <Container\n      fluid\n      className={\n        \"p-0 pb-5 d-flex align-items-center \" +\n        (darkmode ? \"theme-dark\" : \"bg-primary\")\n      }\n      style={{ minHeight: \"100vh\" }}\n    >\n      <Row>\n        <Col>\n          <Navigation\n            drop={false}\n            check={check}\n            darkmode={darkmode}\n            theme={theme}\n          />\n        </Col>\n      </Row>\n      <Row className=\"d-flex justify-content-center w-100 m-0\">\n        <Col className=\"p-0\" style={{ maxWidth: \"550px\" }}>\n          {loaded ? (\n            <Form\n              onSubmit={sendUpdate}\n              className={\n                \"px-3 py-5 px-sm-5 \" +\n                (darkmode ? \"theme-dark-grey\" : \"bg-light\")\n              }\n            >\n              <h2 className=\"mb-4\">Update user info</h2>\n\n              <Form.Label className=\"mt-2\">First Name</Form.Label>\n              <InputGroup className=\"mb-2\">\n                <InputGroup.Prepend>\n                  <InputGroup.Text\n                    className=\"rounded-0\"\n                    style={{ backgroundColor: \"#1484D6\", color: \"white\" }}\n                    id=\"basic-addon1\"\n                  >\n                    <CgArrowsExchangeAlt size={24} />\n                  </InputGroup.Text>\n                </InputGroup.Prepend>\n                <Form.Control\n                  className=\"rounded-0\"\n                  type=\"text\"\n                  name={fname}\n                  value={fname}\n                  onChange={updateFname}\n                />\n              </InputGroup>\n\n              <Form.Label className=\"mt-2\">Last Name</Form.Label>\n              <InputGroup className=\"mb-2\">\n                <InputGroup.Prepend>\n                  <InputGroup.Text\n                    className=\"rounded-0\"\n                    style={{ backgroundColor: \"#1484D6\", color: \"white\" }}\n                    id=\"basic-addon1\"\n                  >\n                    <CgArrowsExchangeAlt size={24} />\n                  </InputGroup.Text>\n                </InputGroup.Prepend>\n                <Form.Control\n                  className=\"rounded-0\"\n                  type=\"text\"\n                  name={lname}\n                  value={lname}\n                  onChange={updateLname}\n                />\n              </InputGroup>\n\n              <Form.Label className=\"mt-2\">Email</Form.Label>\n              <InputGroup className=\"mb-2\">\n                <InputGroup.Prepend>\n                  <InputGroup.Text\n                    className=\"rounded-0\"\n                    style={{ backgroundColor: \"#1484D6\", color: \"white\" }}\n                    id=\"basic-addon1\"\n                  >\n                    <CgArrowsExchangeAlt size={24} />\n                  </InputGroup.Text>\n                </InputGroup.Prepend>\n                <Form.Control\n                  className=\"rounded-0\"\n                  type=\"text\"\n                  name={email}\n                  value={email}\n                  onChange={updateEmail}\n                />\n              </InputGroup>\n\n              <Button className=\"mt-5 rounded-0\" type=\"submit\" block>\n                Change\n              </Button>\n            </Form>\n          ) : (\n            <Spinner animation=\"border\" />\n          )}\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default UpdateUser;\n","import axios from \"axios\";\nimport \"../../scss/custom.scss\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { ImArrowUp, ImArrowDown } from \"react-icons/im\";\n\nconst Post = ({\n  postid,\n  username,\n  post,\n  date,\n  likes,\n  comments,\n  getdata,\n  postTitle,\n  postSubject,\n  visible,\n  theme,\n  darkmode,\n}) => {\n  const getDate = (newdate) => {\n    let date = new Date(newdate);\n    let year = date.getFullYear();\n    let month = date.getMonth() + 1;\n    let dt = date.getDate();\n\n    if (dt < 10) {\n      dt = \"0\" + dt;\n    }\n    if (month < 10) {\n      month = \"0\" + month;\n    }\n\n    let res = `${dt}-${month}-${year}`;\n    return res;\n  };\n\n  const likePost = async (id) => {\n    const user = {\n      postid: id,\n      user: username,\n      current: localStorage.getItem(\"user\"),\n    };\n    //console.log(user)\n\n    const req = await axios\n      .post(\"http://localhost:5000/users/upvote\", user, {\n        headers: {\n          \"x-auth-token\": localStorage.getItem(\"token\"),\n        },\n      })\n      .then((res) => {\n        getdata();\n      });\n  };\n\n  const downVote = async (id) => {\n    const user = {\n      postid: id,\n      user: username,\n      current: localStorage.getItem(\"user\"),\n    };\n    //console.log(user)\n\n    const req = await axios\n      .post(\"http://localhost:5000/users/downvote\", user, {\n        headers: {\n          \"x-auth-token\": localStorage.getItem(\"token\"),\n        },\n      })\n      .then((res) => {\n        getdata();\n      });\n  };\n\n  return (\n    <div className=\"w-100\">\n      {visible ? (\n        <Container className=\"mt-3\">\n          <Row className=\"justify-content-center\">\n            <Col\n              xs={12}\n              lg={12}\n              className={\n                \"border rounded \" +\n                (darkmode\n                  ? \"theme-dark-grey border-warning border-highlight-dark\"\n                  : \"bg-white border-info border-highlight\")\n              }\n            >\n              <Row className=\"d-flex align-items-center justify-content-center\">\n                <Col xs={2} md={1} lg={1}>\n                  <Row>\n                    <Col className=\"d-flex justify-content-center\">\n                      <ImArrowUp\n                        className=\"arrow\"\n                        size={24}\n                        onClick={() => likePost(postid)}\n                      />\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col className=\"d-flex justify-content-center pt-2 text-center\">\n                      <h5 style={{ userSelect: \"none\" }}>{likes}</h5>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col className=\"d-flex justify-content-center\">\n                      <ImArrowDown\n                        className=\"arrow\"\n                        size={24}\n                        onClick={() => downVote(postid)}\n                      />\n                    </Col>\n                  </Row>\n                </Col>\n\n                <Col className=\"pl-0\">\n                  <Link\n                    className=\"text-decoration-none\"\n                    to={{\n                      pathname: `/thread/${postid}`,\n                      state: { id: postid },\n                    }}\n                  >\n                    <Row>\n                      <Col\n                        xs={4}\n                        md={3}\n                        xl={2}\n                        className=\"d-flex align-items-center justify-content-center pl-4 pr-0 pt-2\"\n                      >\n                        <p\n                          className={`fit mb-0 border rounded-pill text-white text-center ${postSubject.replace(\n                            /\\s+/g,\n                            \"\"\n                          )}`}\n                          style={{ fontSize: \"15px\" }}\n                        >\n                          {postSubject}\n                        </p>\n                      </Col>\n                      <Col className=\"p-0 pl-3\">\n                        <p className=\"mt-3 mb-0\">\n                          {`Posted by ${username}`}\n                          <span\n                            className=\"ml-3 text-dark\"\n                            style={{ fontSize: \"14px\" }}\n                          >\n                            {getDate(date)}\n                          </span>\n                        </p>\n                      </Col>\n                    </Row>\n                    <h5 className=\"my-2\" style={{ fontSize: \"19px\" }}>\n                      {`${postTitle.substring(0, 200)}`}\n                    </h5>\n                    <p className=\"my-2 text-dark\" style={{ fontSize: \"15px\" }}>\n                      {`${post.substring(0, 300)}...`}\n                    </p>\n                    <p>{comments.length} Comments</p>\n                  </Link>\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n        </Container>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n};\n\nexport default Post;\n\n{\n  /* <Container>\n<Row className=\"justify-content-md-center my-4\">\n    <Col xs={8} lg={6} className=\"border border-primary rounded px-4 bg-white\">\n        <h4 className=\"mt-3 mb-0\">{username}</h4>\n        <span style={{\n            fontSize: \"14px\",\n            color: \"#777\"\n        }}>{getDate(date)}</span>\n        <br />\n        <p className=\"my-1\" style={{\n            fontSize: \"18px\",\n        }}>{post}</p>\n        <span>{likes}</span>\n        <Button onClick={() => likePost(postid)}>Like</Button>\n        {comments.map((item) => (\n            <Comment\n                key={'com' + item._id}\n                username={item.username}\n                date={item.date}\n                comment={item.comment}\n            />\n        ))}\n        <AddComment\n            key={'addcom' + postid}\n            username={username}\n            post={post}\n        />\n    </Col>\n</Row>\n</Container> */\n}\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Container, Row, Col, Button, Form, Collapse } from \"react-bootstrap\";\nimport \"../../scss/custom.scss\";\n\nconst AddPost = ({ getdata, darkmode }) => {\n  const [post, setPost] = useState(\"\");\n  const [postTitle, setPostTitle] = useState(\"\");\n  const [postSubject, setPostSubject] = useState(\"\");\n  const [open, setOpen] = useState(false);\n\n  const updatePost = (e) => {\n    setPost(e.target.value);\n  };\n  const updatePostTitle = (e) => {\n    setPostTitle(e.target.value);\n  };\n  const updatePostSubject = (e) => {\n    setPostSubject(e.target.value);\n  };\n\n  const newPost = async (e) => {\n    e.preventDefault();\n    const user = {\n      username: localStorage.getItem(\"user\"),\n      postTitle: postTitle,\n      postSubject: postSubject,\n      post: post,\n    };\n    console.log(user);\n\n    const req = await axios\n      .post(\"http://localhost:5000/users/newpost\", user, {\n        headers: {\n          \"x-auth-token\": localStorage.getItem(\"token\"),\n        },\n      })\n      .then((res) => {\n        getdata();\n      });\n  };\n\n  return (\n    <Container>\n      <Row className=\"justify-content-center\">\n        <Col\n          xs={12}\n          lg={12}\n          className={\n            \"border border-info rounded pt-4 pb-3 \" +\n            (darkmode ? \"theme-dark-grey border-warning\" : \"bg-white\")\n          }\n        >\n          <Form\n            onSubmit={newPost}\n            onFocus={() => setOpen(!open)}\n            onBlur={() => setOpen(!open)}\n          >\n            <Form.Group>\n              <Row>\n                <Col xs={12}>\n                  <Form.Control\n                    type=\"text\"\n                    name={postTitle}\n                    className={darkmode ? \"\" : \"form-highlight\"}\n                    onChange={updatePostTitle}\n                    placeholder=\"Create A Post Title...\"\n                    maxLength=\"200\"\n                    style={{ backgroundColor: \"#f6f7f8\" }}\n                  />\n                </Col>\n              </Row>\n            </Form.Group>\n            <Collapse in={open}>\n              <Form.Group>\n                <Form.Control\n                  type=\"text\"\n                  name={post}\n                  onChange={updatePost}\n                  placeholder=\"Text Body...\"\n                  as=\"textarea\"\n                  rows={3}\n                  maxLength=\"3000\"\n                />\n                <Row className=\"pt-3\">\n                  <Col>\n                    <Form.Label>Post Topic</Form.Label>\n                  </Col>\n                </Row>\n                <Row>\n                  <Col xs={6}>\n                    <Form.Control\n                      style={{ maxWidth: \"150px\" }}\n                      as=\"select\"\n                      onChange={updatePostSubject}\n                    >\n                      <option value=\"General\">General</option>\n                      <option value=\"Technology\">Technology</option>\n                      <option value=\"World News\">World News</option>\n                      <option value=\"Video Games\">Video Games</option>\n                      <option value=\"Sports\">Sports</option>\n                    </Form.Control>\n                  </Col>\n                  <Col className=\"pr-sm-5\">\n                    <Button type=\"submit\" className=\"rounded-pill float-right\">\n                      Create New Post\n                    </Button>\n                  </Col>\n                </Row>\n              </Form.Group>\n            </Collapse>\n          </Form>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default AddPost;\n","import React, { useState, useEffect } from \"react\";\nimport Post from \"./Post\";\nimport Navigation from \"../Nav/Nav\";\nimport \"../../scss/custom.scss\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Container, Row, Col, Spinner } from \"react-bootstrap\";\nimport AddPost from \"./AddPost\";\nimport axios from \"axios\";\n\nconst PostFeed = ({ check, theme, darkmode }) => {\n  const [post, setPost] = useState(0);\n  const [loaded, setLoaded] = useState(false);\n  const [sub, setSub] = useState(localStorage.getItem(\"sub\"));\n\n  const postArr = (arr) => {\n    let temp = [];\n    for (let i = 0; i < arr.length; i++) {\n      for (let j = 0; j < arr[i].posts.length; j++) {\n        temp.push(arr[i].posts[j]);\n      }\n    }\n\n    temp.sort((a, b) => (a.likes > b.likes ? -1 : b.likes > a.likes ? 1 : 0));\n\n    return temp;\n  };\n\n  const sortArr = (val) => {\n    let col = val;\n    let temp = [];\n    let index = 0;\n    let check = false;\n    let a = [];\n    let b = [];\n\n    if (val == \"Top\") {\n      temp = post.sort((a, b) =>\n        a.likes > b.likes ? -1 : b.likes > a.likes ? 1 : 0\n      );\n      setPost([...temp]);\n    } else {\n      post.forEach((x, i) => {\n        if (x.postSubject == col) {\n          temp.unshift(x);\n        } else {\n          temp.push(x);\n        }\n      });\n\n      temp.forEach((x, i) => {\n        if (x.postSubject == col) {\n          index = i;\n          check = true;\n        }\n      });\n\n      index++;\n\n      if (check) {\n        a = temp.slice(0, index);\n        b = temp.slice(index, temp.length);\n\n        a.sort((a, b) => (a.likes > b.likes ? -1 : b.likes > a.likes ? 1 : 0));\n        b.sort((a, b) => (a.likes > b.likes ? -1 : b.likes > a.likes ? 1 : 0));\n\n        temp = a.concat(b);\n      } else {\n        console.log(index);\n      }\n      setPost([...temp]);\n    }\n  };\n\n  const changeSub = (newsub) => {\n    localStorage.setItem(\"sub\", newsub);\n    setSub(newsub);\n  };\n\n  const updateSort = (e) => {\n    sortArr(e.target.innerHTML);\n  };\n\n  const getData = async () => {\n    try {\n      const res = await axios\n        .get(\"http://localhost:5000/users/\")\n        .then((res) => {\n          console.log(\"yeet\");\n          setPost(postArr(res.data));\n        });\n      setLoaded(true);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  return (\n    <Container className=\"mt-4 pt-2 pb-5\" style={{ minHeight: \"100vh\" }}>\n      <Navigation\n        changeSub={changeSub}\n        check={check}\n        drop={true}\n        theme={theme}\n        darkmode={darkmode}\n      />\n      {loaded ? (\n        <Row className=\"justify-content-md-center\">\n          <Col>\n            <Row className=\"mt-5\">\n              <AddPost getdata={getData} darkmode={darkmode}></AddPost>\n            </Row>\n            <Row>\n              {post.map((user) => (\n                <Post\n                  key={\"post\" + user._id}\n                  postid={user._id}\n                  username={user.username}\n                  postTitle={user.postTitle}\n                  postSubject={user.postSubject}\n                  post={user.post}\n                  date={user.date}\n                  comments={user.comments}\n                  likes={user.votes}\n                  getdata={getData}\n                  theme={theme}\n                  darkmode={darkmode}\n                  visible={\n                    sub == \"Home\"\n                      ? true\n                      : sub == user.postSubject\n                      ? true\n                      : false\n                  }\n                />\n              ))}\n            </Row>\n          </Col>\n        </Row>\n      ) : (\n        <Spinner animation=\"border\" />\n      )}\n    </Container>\n  );\n};\n\nexport default PostFeed;\n\n// let arr = [\n// \t{\n// \t\tcolor: 'red',\n// \t\tlikes: 3\n// \t},\n//   \t{\n// \t\tcolor: 'blue',\n// \t\tlikes: 2\n// \t},\n//   \t{\n// \t\tcolor: 'green',\n// \t\tlikes: 1\n// \t},\n//   \t{\n// \t\tcolor: 'blue',\n// \t\tlikes: 5\n// \t},\n//    {\n// \t\tcolor: 'blue',\n// \t\tlikes: 1\n// \t},\n// ]\n\n// let col = 'blue'\n// let temp = [];\n// let index = 0;\n// let check = false;\n// let a = [];\n// let b = [];\n\n// arr.forEach((x,i) => {\n// \tif(x.color == col) {\n//   \ttemp.unshift(x)\n//   } else {\n//   \ttemp.push(x)\n//   }\n// })\n\n// temp.forEach((x,i) => {\n// if(x.color==col) {\n// index=i;\n// check = true;\n// }\n// })\n\n// index++\n\n// if(check) {\n// \ta = temp.slice(0, index)\n//   b = temp.slice(index, temp.length)\n\n//   a.sort((a, b) => (a.likes > b.likes ? -1 : b.likes > a.likes ? 1 : 0));\n// \tb.sort((a, b) => (a.likes > b.likes ? -1 : b.likes > a.likes ? 1 : 0));\n\n// \ttemp = a.concat(b)\n// } else {\n// console.log(index)\n// }\n\n// console.log(temp)\n\n// <Container>\n// <Row className=\"border border-info bg-white d-flex justify-content-center rounded-pill\">\n//   <Col\n//     xs={2}\n//     className=\"text-center p-0 d-flex justify-content-center align-items-center\"\n//   >\n//     <span\n//       className=\"pointer align-middle py-2 bg-primary\"\n//       onClick={updateSort}\n//     >\n//       Top\n//     </span>\n//   </Col>\n//   <Col\n//     xs={2}\n//     className=\"text-center p-0 d-flex justify-content-center align-items-center\"\n//   >\n//     <span\n//       className=\"pointer align-middle w-100 py-2\"\n//       onClick={updateSort}\n//     >\n//       General\n//     </span>\n//   </Col>\n//   <Col\n//     xs={2}\n//     className=\"text-center p-0 d-flex justify-content-center align-items-center\"\n//   >\n//     <span\n//       className=\"pointer align-middle w-100 py-2\"\n//       onClick={updateSort}\n//     >\n//       Tech\n//     </span>\n//   </Col>\n//   <Col\n//     xs={2}\n//     className=\"text-center p-0 d-flex justify-content-center align-items-center\"\n//   >\n//     <span\n//       className=\"pointer align-middle w-100 py-2\"\n//       onClick={updateSort}\n//     >\n//       World News\n//     </span>\n//   </Col>\n//   <Col\n//     xs={2}\n//     className=\"text-center p-0 d-flex justify-content-center align-items-center\"\n//   >\n//     <span\n//       className=\"pointer align-middle w-100 py-2\"\n//       onClick={updateSort}\n//     >\n//       Video Games\n//     </span>\n//   </Col>\n//   <Col\n//     xs={2}\n//     className=\"text-center p-0 d-flex justify-content-center align-items-center\"\n//   >\n//     <span\n//       className=\"pointer align-middle w-100 py-2\"\n//       onClick={updateSort}\n//     >\n//       Sports\n//     </span>\n//   </Col>\n// </Row>\n// </Container>\n\n{\n  /* <Row className=\"justify-content-md-center\">\n<Col xs={12} lg={10}>\n  <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"Top\">\n    <Nav\n      variant=\"pills\"\n      className=\"flex-row bg-white border border-info rounded-pill\"\n    >\n      <Col className=\"p-0 \">\n        <Nav.Item className=\"text-center h-100 \">\n          <Nav.Link\n            className=\"h-100 px-1\"\n            eventKey=\"Top\"\n            onClick={updateSort}\n            style={{\n              borderBottomLeftRadius: \"800px\",\n              borderTopLeftRadius: \"800px\",\n            }}\n          >\n            Top\n          </Nav.Link>\n        </Nav.Item>\n      </Col>\n      <Col className=\"p-0\">\n        <Nav.Item className=\"text-center h-100\">\n          <Nav.Link\n            className=\"h-100 tab-border px-1\"\n            eventKey=\"General\"\n            onClick={updateSort}\n          >\n            General\n          </Nav.Link>\n        </Nav.Item>\n      </Col>\n      <Col className=\"p-0\">\n        <Nav.Item className=\"text-center h-100\">\n          <Nav.Link\n            className=\"h-100 tab-border px-1\"\n            eventKey=\"Technology\"\n            onClick={updateSort}\n          >\n            Technology\n          </Nav.Link>\n        </Nav.Item>\n      </Col>\n      <Col className=\"p-0\">\n        <Nav.Item className=\"text-center h-100\">\n          <Nav.Link\n            className=\"h-100 tab-border px-1\"\n            eventKey=\"World News\"\n            onClick={updateSort}\n          >\n            World News\n          </Nav.Link>\n        </Nav.Item>\n      </Col>\n      <Col className=\"p-0\">\n        <Nav.Item className=\"text-center h-100\">\n          <Nav.Link\n            className=\"h-100 tab-border px-1\"\n            eventKey=\"Video Games\"\n            onClick={updateSort}\n          >\n            Video Games\n          </Nav.Link>\n        </Nav.Item>\n      </Col>\n      <Col className=\"p-0\">\n        <Nav.Item className=\"text-center h-100\">\n          <Nav.Link\n            className=\"h-100 px-1\"\n            eventKey=\"Sports\"\n            onClick={updateSort}\n            style={{\n              borderBottomRightRadius: \"800px\",\n              borderTopRightRadius: \"800px\",\n            }}\n          >\n            Sports\n          </Nav.Link>\n        </Nav.Item>\n      </Col>\n    </Nav>\n  </Tab.Container>\n</Col>\n</Row> */\n}\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"../../scss/custom.scss\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Container, Row, Col, Button, Form, InputGroup } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { AiOutlineUser } from \"react-icons/ai\";\nimport { RiLockPasswordLine } from \"react-icons/ri\";\n\nconst SignUp = ({ check }) => {\n  const [username, setUser] = useState(\"\");\n  const [pass, setPass] = useState(\"\");\n  const [errorMsg, setErrorMsg] = useState(\"\");\n\n  const updateUser = (e) => {\n    setUser(e.target.value);\n  };\n  const updatePass = (e) => {\n    setPass(e.target.value);\n  };\n\n  const addUser = async (e) => {\n    e.preventDefault();\n    const user = {\n      username: username,\n      password: pass,\n    };\n    console.log(user);\n\n    await axios.post(\"http://localhost:5000/users/signup\", user).then((res) => {\n      if (res.data.msg == \"User already exist\") {\n        setErrorMsg(res.data.msg);\n      } else {\n        localStorage.setItem(\"token\", res.data.token);\n        localStorage.setItem(\"user\", res.data.user.username);\n        window.location.reload();\n      }\n    });\n  };\n\n  return (\n    <Container\n      fluid\n      className=\"bg-primary p-0 pb-5 d-flex align-items-center\"\n      style={{ minHeight: \"100vh\" }}\n    >\n      <Row className=\"d-flex justify-content-center w-100 m-0\">\n        <Col className=\"p-0\" style={{ maxWidth: \"600px\" }}>\n          <Form onSubmit={addUser} className=\"bg-light px-3 py-5 px-sm-5\">\n            <h2 className=\"mb-4\">Sign Up</h2>\n\n            <Form.Label>Username</Form.Label>\n            <InputGroup className=\"mb-4\">\n              <InputGroup.Prepend>\n                <InputGroup.Text\n                  className=\"rounded-0 bg-primary text-white\"\n                  id=\"basic-addon1\"\n                >\n                  <AiOutlineUser size={20} />\n                </InputGroup.Text>\n              </InputGroup.Prepend>\n              <Form.Control\n                className=\"rounded-0\"\n                type=\"text\"\n                name={username}\n                onChange={updateUser}\n              />\n            </InputGroup>\n\n            <Form.Label className=\"mt-2\">Password</Form.Label>\n            <InputGroup className=\"mb-4\">\n              <InputGroup.Prepend>\n                <InputGroup.Text\n                  className=\"rounded-0 bg-primary text-white\"\n                  id=\"basic-addon1\"\n                >\n                  <RiLockPasswordLine size={20} />\n                </InputGroup.Text>\n              </InputGroup.Prepend>\n              <Form.Control\n                className=\"rounded-0\"\n                type=\"password\"\n                name={pass}\n                onChange={updatePass}\n              />\n            </InputGroup>\n\n            <p>{errorMsg}</p>\n\n            <Button className=\"mt-1 mb-3 rounded-0\" type=\"submit\" block>\n              Sign Up\n            </Button>\n\n            <Link to=\"/SignIn\">Already have an Account? Login Here!</Link>\n          </Form>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default SignUp;\n\n// import React, { useState, useContext } from 'react';\n// import { UserContext } from './UserContext';\n// import axios from 'axios';\n// import '../../scss/custom.scss';\n// import 'bootstrap/dist/css/bootstrap.min.css'\n// import { Container, Row, Col, Button, Form, InputGroup } from 'react-bootstrap';\n\n// const SignUp = () => {\n//     const { updateCon, currentCon, updateCurrentCon } = useContext(UserContext);\n//     const [update, setUpdate] = updateCon\n//     const [current, setCurrent] = currentCon\n//     const [updateCurrent, setUpdateCurrent] = updateCurrentCon\n\n//     const [username, setUser] = useState('');\n//     const [pass, setPass] = useState('');\n\n//     const updateUser = (e) => {\n//         setUser(e.target.value);\n//     }\n//     const updatePass = (e) => {\n//         setPass(e.target.value);\n//     }\n\n//     const addUser = (e) => {\n//         e.preventDefault();\n//         const user = {\n//             username: username,\n//             password: pass,\n//         }\n//         console.log(user)\n\n//         axios.post('http://localhost:5000/users/signup', user)\n//             .then(res => {\n//                 setUpdate(!update);\n//                 //console.log(res.data);\n//                 localStorage.setItem(\"token\", res.data.token);\n//                 setUpdateCurrent(!updateCurrent);\n//                 setUpdate(!update);\n//             })\n//     }\n\n//     return (\n//         <Container fluid className=\"bg-primary pb-5 d-flex align-items-center\" style={{ minHeight: \"calc(100vh - 56px)\" }}>\n//             <Row className=\"justify-content-md-center w-100\">\n//                 <Col xs={10} md={7} lg={5}>\n\n//                     <Form onSubmit={addUser} className=\"bg-light p-5\">\n//                         <h2 className=\"mb-4\">Sigh Up</h2>\n\n//                         <Form.Label>Username</Form.Label>\n//                         <InputGroup className=\"mb-4\">\n//                             <InputGroup.Prepend>\n//                                 <InputGroup.Text\n//                                     className=\"rounded-0\"\n//                                     style={{ backgroundColor: \"#3AAF83\", color: \"white\" }}\n//                                     id=\"basic-addon1\">@</InputGroup.Text>\n//                             </InputGroup.Prepend>\n//                             <Form.Control\n//                                 className=\"rounded-0\"\n//                                 type=\"text\"\n//                                 name={username}\n//                                 onChange={updateUser}\n//                             />\n//                         </InputGroup>\n\n//                         <Form.Label className=\"mt-2\">Password</Form.Label>\n//                         <InputGroup className=\"mb-4\">\n//                             <InputGroup.Prepend>\n//                                 <InputGroup.Text\n//                                     className=\"rounded-0\"\n//                                     style={{ backgroundColor: \"#3AAF83\", color: \"white\" }}\n//                                     id=\"basic-addon1\">@</InputGroup.Text>\n//                             </InputGroup.Prepend>\n//                             <Form.Control\n//                                 className=\"rounded-0\"\n//                                 type=\"text\"\n//                                 name={pass}\n//                                 onChange={updatePass} />\n//                         </InputGroup>\n\n//                         <Button className=\"mt-1 rounded-0\" type=\"submit\" block>Sign Up</Button>\n\n//                     </Form>\n\n//                 </Col>\n//             </Row>\n//         </Container>\n//     );\n// }\n\n// export default SignUp;\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"../../scss/custom.scss\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Container, Row, Col, Button, Form, InputGroup } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { AiOutlineUser } from \"react-icons/ai\";\nimport { RiLockPasswordLine } from \"react-icons/ri\";\n\nconst SignIn = ({ check }) => {\n  const [username, setUser] = useState(\"\");\n  const [pass, setPass] = useState(\"\");\n  const [errorMsg, setErrorMsg] = useState(\"\");\n\n  const updateUser = (e) => {\n    setUser(e.target.value);\n  };\n  const updatePass = (e) => {\n    setPass(e.target.value);\n  };\n\n  const addUser = async (e) => {\n    e.preventDefault();\n    const user = {\n      username: username,\n      password: pass,\n    };\n    console.log(user);\n\n    await axios.post(\"http://localhost:5000/users/signin\", user).then((res) => {\n      if (res.data.msg == \"user does not exist\") {\n        setErrorMsg(res.data.msg);\n      } else if (res.data.msg == \"wrong password\") {\n        setErrorMsg(res.data.msg);\n      } else {\n        localStorage.setItem(\"token\", res.data.token);\n        localStorage.setItem(\"user\", res.data.user.username);\n      }\n\n      check();\n    });\n  };\n\n  return (\n    <Container\n      className=\"bg-primary p-0 pb-5 d-flex align-items-center\"\n      style={{ minHeight: \"100vh\" }}\n      fluid\n    >\n      <Row className=\"d-flex justify-content-center w-100 m-0\">\n        <Col className=\"p-0\" style={{ maxWidth: \"600px\" }}>\n          <Form onSubmit={addUser} className=\"bg-light px-3 py-5 px-sm-5\">\n            <h2 className=\"mb-4\">Sign In</h2>\n\n            <Form.Label>Username</Form.Label>\n            <InputGroup className=\"mb-4\">\n              <InputGroup.Prepend>\n                <InputGroup.Text\n                  className=\"rounded-0 bg-primary text-white\"\n                  id=\"basic-addon1\"\n                >\n                  <AiOutlineUser size={20} />\n                </InputGroup.Text>\n              </InputGroup.Prepend>\n              <Form.Control\n                className=\"rounded-0\"\n                type=\"text\"\n                name={username}\n                onChange={updateUser}\n              />\n            </InputGroup>\n\n            <Form.Label className=\"mt-2\">Password</Form.Label>\n            <InputGroup className=\"mb-4\">\n              <InputGroup.Prepend>\n                <InputGroup.Text\n                  className=\"rounded-0 bg-primary text-white\"\n                  id=\"basic-addon1\"\n                >\n                  <RiLockPasswordLine size={20} />\n                </InputGroup.Text>\n              </InputGroup.Prepend>\n              <Form.Control\n                className=\"rounded-0\"\n                type=\"password\"\n                name={pass}\n                onChange={updatePass}\n              />\n            </InputGroup>\n\n            <p>{errorMsg}</p>\n\n            <Button className=\"mt-1 mb-3 rounded-0\" type=\"submit\" block>\n              Sign In\n            </Button>\n\n            <Link to=\"/SignUp\">Don't have an Account? Sign Up Here!</Link>\n          </Form>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default SignIn;\n","import \"../../scss/custom.scss\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nconst Comment = ({ username, date, comment, darkmode }) => {\n  const getDate = (newdate) => {\n    let date = new Date(newdate);\n    let year = date.getFullYear();\n    let month = date.getMonth() + 1;\n    let dt = date.getDate();\n\n    if (dt < 10) {\n      dt = \"0\" + dt;\n    }\n    if (month < 10) {\n      month = \"0\" + month;\n    }\n\n    let res = `${dt}-${month}-${year}`;\n    return res;\n  };\n\n  return (\n    <Container\n      className={\n        \"border border-light rounded p-3 my-3 \" +\n        (darkmode ? \"theme-dark-grey\" : \"bg-light\")\n      }\n    >\n      <Row>\n        <Col>\n          <span\n            style={{\n              fontWeight: \"500\",\n              fontSize: \"18px\",\n            }}\n          >\n            {username}\n          </span>\n          <span\n            className=\"ml-2\"\n            style={{\n              fontSize: \"12px\",\n              color: \"#777\",\n            }}\n          >\n            {getDate(date)}\n          </span>\n          <p className=\"mx-1 my-2\">{comment}</p>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Comment;\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"../../scss/custom.scss\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Container, Row, Col, Form, Button } from \"react-bootstrap\";\n\nconst AddComment = ({ username, post, getdata, darkmode }) => {\n  const [comment, setComment] = useState(\"\");\n\n  const updateComment = (e) => {\n    setComment(e.target.value);\n  };\n\n  const newComment = async (e) => {\n    e.preventDefault();\n    const user = {\n      user: username,\n      post: post,\n      commentuser: localStorage.getItem(\"user\"),\n      comment: comment,\n    };\n    console.log(user);\n\n    await axios\n      .post(\"http://localhost:5000/users/newcomment\", user, {\n        headers: {\n          \"x-auth-token\": localStorage.getItem(\"token\"),\n        },\n      })\n      .then((res) => {\n        getdata();\n      });\n  };\n\n  return (\n    <Container className=\"mt-4\">\n      <Row className=\"d-flex align-items-center justify-content-center\">\n        <Col xs={12} sm={11} md={10}>\n          <Form onSubmit={newComment}>\n            <Form.Group>\n              <Form.Label>\n                {`Comment as ${localStorage.getItem(\"user\")}`}\n              </Form.Label>\n              <Form.Control\n                type=\"text\"\n                name={comment}\n                onChange={updateComment}\n                placeholder=\"What are your thoughts?\"\n                as=\"textarea\"\n                rows={3}\n                maxLength=\"3000\"\n                className={darkmode ? \"theme-dark-grey\" : \"bg-white\"}\n              />\n            </Form.Group>\n            <Button type=\"submit\" className=\"rounded-pill float-right\">\n              Comment\n            </Button>\n          </Form>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default AddComment;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"../../scss/custom.scss\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Navigation from \"../Nav/Nav\";\nimport { Container, Row, Col, Spinner } from \"react-bootstrap\";\nimport Comment from \"./Comment\";\nimport AddComment from \"./AddComment\";\nimport { useLocation } from \"react-router-dom\";\nimport { ImArrowUp, ImArrowDown } from \"react-icons/im\";\n\nconst Thread = ({ check, theme, darkmode }) => {\n  const [thread, setThread] = useState(0);\n  const [loaded, setLoaded] = useState(false);\n  const data = useLocation();\n\n  const getDate = (newdate) => {\n    let date = new Date(newdate);\n    let year = date.getFullYear();\n    let month = date.getMonth() + 1;\n    let dt = date.getDate();\n\n    if (dt < 10) {\n      dt = \"0\" + dt;\n    }\n    if (month < 10) {\n      month = \"0\" + month;\n    }\n\n    let res = `${dt}-${month}-${year}`;\n    return res;\n  };\n\n  const likePost = async (id) => {\n    const user = {\n      postid: thread._id,\n      user: thread.username,\n      current: localStorage.getItem(\"user\"),\n    };\n    console.log(user);\n\n    try {\n      const req = await axios\n        .post(\"http://localhost:5000/users/upvote\", user, {\n          headers: {\n            \"x-auth-token\": localStorage.getItem(\"token\"),\n          },\n        })\n        .then((res) => {\n          getData();\n        });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const downVote = async (id) => {\n    const user = {\n      postid: thread._id,\n      user: thread.username,\n      current: localStorage.getItem(\"user\"),\n    };\n\n    try {\n      const req = await axios\n        .post(\"http://localhost:5000/users/downvote\", user, {\n          headers: {\n            \"x-auth-token\": localStorage.getItem(\"token\"),\n          },\n        })\n        .then((res) => {\n          getData();\n        });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const postArr = (arr) => {\n    let temp = [];\n    for (let i = 0; i < arr.length; i++) {\n      for (let j = 0; j < arr[i].posts.length; j++) {\n        temp.push(arr[i].posts[j]);\n      }\n    }\n\n    return temp;\n  };\n\n  const findThread = (post, id) => {\n    const i = post.map((x) => x._id).indexOf(id);\n    const temp = post[i];\n    return temp;\n  };\n\n  const getData = async () => {\n    try {\n      const res = await axios\n        .get(\"http://localhost:5000/users/\")\n        .then((res) => {\n          let temp = postArr(res.data);\n          setThread(findThread(temp, data.state.id));\n        });\n      setLoaded(true);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  return (\n    <Container style={{ minHeight: \"calc(100vh)\" }}>\n      <Navigation\n        drop={false}\n        check={check}\n        theme={theme}\n        darkmode={darkmode}\n      />\n      <Row className=\"justify-content-md-center mt-5 pt-5\">\n        <Col\n          className={\n            \"border border-info rounded \" +\n            (darkmode ? \"theme-dark-grey border-warning\" : \"bg-white\")\n          }\n        >\n          {loaded ? (\n            <div>\n              <Row className=\"d-flex align-items-center justify-content-center\">\n                <Col xs={2} md={1} lg={1}>\n                  <Row>\n                    <Col className=\"d-flex justify-content-center\">\n                      <ImArrowUp\n                        className=\"arrow\"\n                        size={24}\n                        onClick={() => likePost(thread.id)}\n                      />\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col className=\"d-flex justify-content-center pt-2 text-center\">\n                      <h5>{thread.votes}</h5>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col className=\"d-flex justify-content-center\">\n                      <ImArrowDown\n                        className=\"arrow\"\n                        size={24}\n                        onClick={() => downVote(thread.id)}\n                      />\n                    </Col>\n                  </Row>\n                </Col>\n\n                <Col className=\"pl-0\">\n                  <Row className=\"mt-3\">\n                    <Col\n                      xs={4}\n                      md={3}\n                      xl={2}\n                      className=\"d-flex align-items-center justify-content-center pl-4 pr-0 pt-2\"\n                    >\n                      <p\n                        className={`fit mb-0 border rounded-pill text-white text-center ${thread.postSubject.replace(\n                          /\\s+/g,\n                          \"\"\n                        )}`}\n                        style={{ fontSize: \"15px\" }}\n                      >\n                        {thread.postSubject}\n                      </p>\n                    </Col>\n                    <Col className=\"p-0 pl-3\">\n                      <p className=\"mt-3 mb-0\">\n                        {`Posted by ${thread.username}`}\n                        <span\n                          className=\"ml-3 text-dark\"\n                          style={{ fontSize: \"14px\" }}\n                        >\n                          {getDate(thread.date)}\n                        </span>\n                      </p>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col>\n                      {\" \"}\n                      <h5 className=\"my-2\" style={{ fontSize: \"19px\" }}>\n                        {thread.postTitle}\n                      </h5>\n                      <p\n                        className=\"my-2 text-dark\"\n                        style={{ fontSize: \"15px\" }}\n                      >\n                        {thread.post}\n                      </p>\n                      {/* <p>{thread.comments.length} Comments</p> */}\n                    </Col>\n                  </Row>\n                </Col>\n              </Row>\n              <Row>\n                <Col>\n                  <AddComment\n                    key={\"addcom\" + thread._id}\n                    username={thread.username}\n                    post={thread.post}\n                    getdata={getData}\n                    darkmode={darkmode}\n                  />\n                </Col>\n              </Row>\n              <hr></hr>\n              <Row>\n                <Col>\n                  {thread.comments.map((item) => (\n                    <Comment\n                      key={\"com\" + item._id}\n                      username={item.username}\n                      date={item.date}\n                      comment={item.comment}\n                      darkmode={darkmode}\n                    />\n                  ))}\n                </Col>\n              </Row>\n            </div>\n          ) : (\n            <Spinner animation=\"border\" />\n          )}\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Thread;\n","import React, { useState, useEffect } from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport UpdateUser from \"../Database/UpdateUser\";\nimport PostFeed from \"../Database/PostFeed\";\nimport SignUp from \"../Database/SignUp\";\nimport SignIn from \"../Database/SignIn\";\nimport Thread from \"../Database/Thread\";\nimport axios from \"axios\";\nimport { Spinner } from \"react-bootstrap\";\nimport \"../../scss/custom.scss\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst Routes = () => {\n  const [users, setUserse] = useState(0);\n  const [loaded, setLoaded] = useState(false);\n  const [checklogin, SetCheckLogIn] = useState(false);\n  const [darkmode, setDarkMode] = useState(false);\n\n  const check = () => {\n    console.log(\"loggincheckrun\");\n    SetCheckLogIn(!checklogin);\n  };\n\n  const theme = () => {\n    setDarkMode(!darkmode);\n  };\n\n  const getData = async () => {\n    try {\n      const res = await axios\n        .get(\"http://localhost:5000/users/\")\n        .then((res) => {\n          setUserse(res.data);\n          console.log(\"fetch\");\n        });\n      setLoaded(true);\n    } catch (err) {\n      console.log(err);\n      localStorage.setItem(\"token\", \"\");\n      localStorage.setItem(\"user\", \"\");\n    }\n  };\n\n  const loggedIn = () => {\n    if (users.some((user) => user.username == localStorage.getItem(\"user\"))) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  useEffect(() => {\n    localStorage.setItem(\"sub\", \"Home\");\n    getData();\n  }, []);\n\n  return (\n    <div className={darkmode ? \"theme-dark\" : \"bg-secondary\"}>\n      {loaded ? (\n        <div>\n          {/* {loggedIn() ? <Navigation check={check} /> : \"\"} */}\n          <Switch>\n            {/* <Route path=\"/UserList\" component={UserList} /> */}\n            <Route\n              path=\"/thread/:id\"\n              render={() =>\n                loggedIn() ? (\n                  <Thread check={check} theme={theme} darkmode={darkmode} />\n                ) : (\n                  <Redirect to=\"/\" />\n                )\n              }\n            />\n            <Route\n              path=\"/UpdateUser\"\n              render={() =>\n                loggedIn() ? (\n                  <UpdateUser check={check} darkmode={darkmode} theme={theme} />\n                ) : (\n                  <Redirect to=\"/\" />\n                )\n              }\n            />\n            <Route\n              exact\n              path=\"/\"\n              render={() =>\n                loggedIn() ? (\n                  <PostFeed check={check} theme={theme} darkmode={darkmode} />\n                ) : (\n                  <Redirect to=\"/SignUp\" />\n                )\n              }\n            />\n            <Route\n              path=\"/SignUp\"\n              render={() =>\n                loggedIn() ? <Redirect to=\"/\" /> : <SignUp check={check} />\n              }\n            />\n            <Route\n              path=\"/SignIn\"\n              render={() =>\n                loggedIn() ? <Redirect to=\"/\" /> : <SignIn check={check} />\n              }\n            />\n          </Switch>\n        </div>\n      ) : (\n        <Spinner animation=\"border\" />\n      )}\n    </div>\n  );\n};\n\nexport default Routes;\n","import Navigation from \"./Components/Nav/Nav\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"./scss/custom.scss\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Container } from \"react-bootstrap\";\nimport Routes from \"./Components/Router/Routes\";\n\nfunction App() {\n  return (\n    <Router>\n      <Container fluid className=\"App p-0\">\n        <Routes />\n      </Container>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  //<React.StrictMode>\n  <App />,\n  //</React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}